import React, { useCallback, useEffect } from "react";

import { ThemeProvider } from "@gravity-ui/uikit";
import type { Meta, StoryObj } from "@storybook/react";

import { TBlock } from "../../../components/canvas/blocks/Block";
import { AlignmentLinesLayer } from "../../../components/canvas/layers/alignmentLayer";
import { Graph } from "../../../graph";
import { GraphBlock, GraphCanvas, useGraph, useLayer } from "../../../react-components";
import { TConnection } from "../../../store/connection/ConnectionState";
import { ECanChangeBlockGeometry } from "../../../store/settings";

import "@gravity-ui/uikit/styles/styles.css";

// Sample data for demonstration
const sampleBlocks: TBlock[] = [
  {
    is: "Block" as const,
    id: "block-1",
    x: 100,
    y: 100,
    width: 150,
    height: 80,
    selected: false,
    name: "Block 1",
    anchors: [],
  },
  {
    is: "Block" as const,
    id: "block-2",
    x: 300,
    y: 200,
    width: 150,
    height: 80,
    selected: false,
    name: "Block 2",
    anchors: [],
  },
  {
    is: "Block" as const,
    id: "block-3",
    x: 500,
    y: 100,
    width: 150,
    height: 80,
    selected: false,
    name: "Block 3",
    anchors: [],
  },
  {
    is: "Block" as const,
    id: "block-4",
    x: 200,
    y: 300,
    width: 150,
    height: 80,
    selected: false,
    name: "Block 4",
    anchors: [],
  },
];

const sampleConnections: TConnection[] = [];

interface AlignmentStoryProps {
  magnetismDistance?: number | "auto";
  snapThreshold?: number;
  allowMultipleSnap?: boolean;
  enabledBorders?: Array<"top" | "right" | "bottom" | "left">;
  snapColor?: string;
  guideColor?: string;
  lineWidth?: number;
  snapDashPattern?: number[];
  guideDashPattern?: number[];
}

const AlignmentStory = ({
  magnetismDistance = 200, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –ª–∏–Ω–∏–π
  snapThreshold = 15, // –ü—Ä–∏–ª–∏–ø–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –±–ª–∏–∑–∫–æ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏
  allowMultipleSnap = true,
  enabledBorders = ["top", "right", "bottom", "left"],
  snapColor = "#007AFF",
  guideColor = "#E0E0E0",
  lineWidth = 1,
  snapDashPattern = [5, 5],
  guideDashPattern = [3, 3],
}: AlignmentStoryProps) => {
  const renderBlock = useCallback((graph: Graph, block: TBlock) => {
    return (
      <GraphBlock graph={graph} block={block} className="demo-block">
        <div
          style={{
            width: "100%",
            height: "100%",
            background: "#f5f5f5",
            border: "2px solid #ddd",
            borderRadius: "8px",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            fontFamily: "Arial, sans-serif",
            fontSize: "14px",
            fontWeight: "bold",
            cursor: "grab",
            userSelect: "none",
          }}
        >
          {block.name}
        </div>
      </GraphBlock>
    );
  }, []);

  const { graph } = useGraph({
    settings: {
      canChangeBlockGeometry: ECanChangeBlockGeometry.ALL,
      canDragCamera: true,
      canZoomCamera: true,
    },
  });

  useLayer(graph, AlignmentLinesLayer, {
    magneticBorderConfig: {
      magnetismDistance,
      snapThreshold,
      allowMultipleSnap,
      enabledBorders,
    },
    lineStyle: {
      snapColor,
      guideColor,
      width: lineWidth,
      snapDashPattern,
      guideDashPattern,
    },
  });

  useEffect(() => {
    if (graph) {
      graph.setEntities({
        blocks: sampleBlocks,
        connections: sampleConnections,
      });
      graph.start();
    }
  }, [graph]);

  return (
    <div style={{ width: "100%", height: "600px" }}>
      <div
        style={{
          marginBottom: "16px",
          padding: "12px",
          background: "#f9f9f9",
          borderRadius: "6px",
          fontSize: "14px",
        }}
      >
        <strong>üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</strong> –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –±–ª–æ–∫ –ª—é–±–æ–π –≥—Ä–∞–Ω–∏—Ü–µ–π –∫ –ª–∏–Ω–∏–∏. –ü—Ä–∏–ª–∏–ø–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤—Å–µ—Ö –≥—Ä–∞–Ω–∏—Ü
        –±–ª–æ–∫–∞ (–≤–µ—Ä—Ö, –Ω–∏–∑, –ª–µ–≤–æ, –ø—Ä–∞–≤–æ)
      </div>
      <GraphCanvas graph={graph} renderBlock={renderBlock} />
    </div>
  );
};

const GraphApp = (props: AlignmentStoryProps) => {
  return (
    <ThemeProvider theme={"light"}>
      <AlignmentStory {...props} />
    </ThemeProvider>
  );
};

const meta: Meta<typeof GraphApp> = {
  title: "Examples/Alignment Layer",
  component: GraphApp,
  parameters: {
    layout: "fullscreen",
  },
  argTypes: {
    magnetismDistance: {
      control: { type: "select" },
      options: ["auto", 100, 200, 300, 500],
      description: "–†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ –±–ª–æ–∫–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –ª–∏–Ω–∏–π",
    },
    snapThreshold: {
      control: { type: "range", min: 5, max: 50, step: 5 },
      description: "–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –ª–∏–Ω–∏–∏ –¥–ª—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è",
    },
    allowMultipleSnap: {
      control: { type: "boolean" },
      description: "–†–∞–∑—Ä–µ—à–∏—Ç—å –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ –∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ª–∏–Ω–∏—è–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ",
    },
    enabledBorders: {
      control: { type: "check" },
      options: ["top", "right", "bottom", "left"],
      description: "–í–∫–ª—é—á–µ–Ω–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è",
    },
    snapColor: {
      control: { type: "color" },
      description: "–¶–≤–µ—Ç –ª–∏–Ω–∏–π –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è (–∞–∫—Ç–∏–≤–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ)",
    },
    guideColor: {
      control: { type: "color" },
      description: "–¶–≤–µ—Ç –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π (–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ)",
    },
    lineWidth: {
      control: { type: "range", min: 1, max: 5, step: 1 },
      description: "–¢–æ–ª—â–∏–Ω–∞ –ª–∏–Ω–∏–π –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    snapDashPattern: {
      control: { type: "object" },
      description: "–ü–∞—Ç—Ç–µ—Ä–Ω –ø—É–Ω–∫—Ç–∏—Ä–∞ –¥–ª—è –ª–∏–Ω–∏–π –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è",
    },
    guideDashPattern: {
      control: { type: "object" },
      description: "–ü–∞—Ç—Ç–µ—Ä–Ω –ø—É–Ω–∫—Ç–∏—Ä–∞ –¥–ª—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π",
    },
  },
};

export default meta;

type Story = StoryObj<typeof GraphApp>;

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –ª–∏–Ω–∏–∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è —Å –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ–º –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é –¥–æ –ª–∏–Ω–∏–∏.
 * –°–µ—Ä—ã–µ –ª–∏–Ω–∏–∏ –≤–∏–¥–Ω—ã –≤—Å–µ–≥–¥–∞, —Å–∏–Ω–∏–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –ª–∏–Ω–∏–∏.
 */
export const DefaultAlignmentLines: Story = {
  args: {
    magnetismDistance: 200, // –ë–æ–ª—å—à–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–∫–∞–∑–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –ª–∏–Ω–∏–π
    snapThreshold: 15, // –ü—Ä–∏–ª–∏–ø–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –±–ª–∏–∑–∫–æ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ –∫ –ª–∏–Ω–∏–∏
    allowMultipleSnap: true,
    enabledBorders: ["top", "right", "bottom", "left"],
    snapColor: "#007AFF",
    guideColor: "#E0E0E0",
    lineWidth: 1,
    snapDashPattern: [5, 5],
    guideDashPattern: [3, 3],
  },
  parameters: {
    docs: {
      description: {
        story: `
–°–∏—Å—Ç–µ–º–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –ª–∏–Ω–∏–π –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è —Å –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ–º –ª—é–±–æ–π –≥—Ä–∞–Ω–∏—Ü—ã –±–ª–æ–∫–∞.

**–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
1. **–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –ª–∏–Ω–∏–∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è**:
   - –°–µ—Ä—ã–µ –ª–∏–Ω–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
   - –õ–∏–Ω–∏–∏ –≤–∏–¥–Ω—ã –¥–ª—è –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ magnetismDistance (200px)
   - –õ–∏–Ω–∏–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ, –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—é—Ç—Å—è —Ä–∞–∑–º–µ—Ä–∞–º–∏ –±–ª–æ–∫–æ–≤
   
2. **–ü—Ä–∏–ª–∏–ø–∞–Ω–∏–µ –≤—Å–µ—Ö –≥—Ä–∞–Ω–∏—Ü –±–ª–æ–∫–∞**:
   - –ü—Ä–∏–ª–∏–ø–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –ª—é–±–æ–π –≥—Ä–∞–Ω–∏—Ü—ã: –≤–µ—Ä—Ö, –Ω–∏–∑, –ª–µ–≤–æ, –ø—Ä–∞–≤–æ
   - –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –±–ª–∏–∂–∞–π—à—É—é –≥—Ä–∞–Ω–∏—Ü—É –±–ª–æ–∫–∞ –∫ –ª–∏–Ω–∏–∏
   - –ü—Ä–∏–ª–∏–ø–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –ª—é–±–æ–π –≥—Ä–∞–Ω–∏—Ü—ã –Ω–∞ snapThreshold (15px)
   
3. **–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ**:
   - –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ –∫ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏—è–º
   - –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ç–æ—á–Ω–æ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –±–ª–æ–∫–∏ –ø–æ —É–≥–ª–∞–º –∏—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã

**–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
1. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –±–ª–æ–∫ - —É–≤–∏–¥–∏—Ç–µ —Å–µ—Ä—ã–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –ª–∏–Ω–∏–∏ –æ—Ç –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏
2. –ü—Ä–∏–±–ª–∏–∑—å—Ç–µ –õ–Æ–ë–£–Æ –≥—Ä–∞–Ω–∏—Ü—É –±–ª–æ–∫–∞ –∫ —Å–µ—Ä–æ–π –ª–∏–Ω–∏–∏ - –æ–Ω–∞ —Å—Ç–∞–Ω–µ—Ç —Å–∏–Ω–µ–π –∏ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ
3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã—Ä–æ–≤–Ω—è—Ç—å –ø—Ä–∞–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É –æ–¥–Ω–æ–≥–æ –±–ª–æ–∫–∞ —Å –ª–µ–≤–æ–π –≥—Ä–∞–Ω–∏—Ü–µ–π –¥—Ä—É–≥–æ–≥–æ
4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã—Ä–æ–≤–Ω—è—Ç—å –Ω–∏–∂–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É —Å –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ–π –¥—Ä—É–≥–æ–≥–æ –±–ª–æ–∫–∞

**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
- –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ: –ª—é–±–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –±–ª–æ–∫–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–ª–∏–ø–Ω—É—Ç—å –∫ –ª–∏–Ω–∏–∏  
- –¢–æ—á–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –±–ª–æ–∫ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∏–ª–∏–ø–∞—é—â–µ–π –≥—Ä–∞–Ω–∏—Ü—ã
- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å: —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –±–ª–æ–∫–æ–≤
        `,
      },
    },
  },
};

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–ª–∞–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ—Ä–æ–≥–∞–º–∏ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è
 */
export const SmoothSnapControl: Story = {
  args: {
    magnetismDistance: 80,
    snapThreshold: 10,
    allowMultipleSnap: true,
    enabledBorders: ["top", "right", "bottom", "left"],
    snapColor: "#FF3B30",
    guideColor: "#FFE5E5",
    lineWidth: 2,
    snapDashPattern: [8, 4],
    guideDashPattern: [2, 2],
  },
  parameters: {
    docs: {
      description: {
        story: `
–ü—Ä–∏–º–µ—Ä —Å –ø–ª–∞–≤–Ω—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º:
- –ë–æ–ª—å—à–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è (80px) - —Ä–∞–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏
- –ú–∞–ª—ã–π –ø–æ—Ä–æ–≥ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è (10px) - —Ç—Ä–µ–±—É–µ—Ç —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
- –ö—Ä–∞—Å–Ω—ã–µ –ª–∏–Ω–∏–∏ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è –Ω–∞ —Ä–æ–∑–æ–≤–æ–º —Ñ–æ–Ω–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π
- –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        `,
      },
    },
  },
};

/**
 * –ü—Ä–∏–º–µ—Ä —Å –∂–µ—Å—Ç–∫–∏–º –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ–º (–∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏)
 */
export const StrictSnapping: Story = {
  args: {
    magnetismDistance: 30,
    snapThreshold: 30, // –†–∞–≤–Ω–æ magnetismDistance - –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ —Å—Ä–∞–∑—É
    allowMultipleSnap: false,
    enabledBorders: ["top", "bottom"],
    snapColor: "#34C759",
    guideColor: "#34C759", // –¢–æ—Ç –∂–µ —Ü–≤–µ—Ç - –Ω–µ—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    lineWidth: 2,
    snapDashPattern: [10, 5],
    guideDashPattern: [10, 5],
  },
  parameters: {
    docs: {
      description: {
        story: `
–≠–º—É–ª—è—Ü–∏—è —Å—Ç–∞—Ä–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è (–±–µ–∑ –ø–ª–∞–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è):
- snapThreshold = magnetismDistance (30px) - –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ —Å—Ä–∞–∑—É –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏
- allowMultipleSnap = false - —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –ª–∏–Ω–∏—è
- –¢–æ–ª—å–∫–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ
- –û–¥–∏–Ω–∞–∫–æ–≤—ã–π —Å—Ç–∏–ª—å –¥–ª—è –≤—Å–µ—Ö –ª–∏–Ω–∏–π
        `,
      },
    },
  },
};

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ –≤—Å–µ—Ö –≥—Ä–∞–Ω–∏—Ü –±–ª–æ–∫–∞ –∫ –ª–∏–Ω–∏—è–º
 */
export const AllBordersSnappingDemo: Story = {
  args: {
    magnetismDistance: 300,
    snapThreshold: 20, // –ù–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–∏–π –ø–æ—Ä–æ–≥ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    allowMultipleSnap: true,
    enabledBorders: ["top", "right", "bottom", "left"],
    snapColor: "#34C759",
    guideColor: "#D1D1D6",
    lineWidth: 2,
    snapDashPattern: [6, 4],
    guideDashPattern: [2, 2],
  },
  parameters: {
    docs: {
      description: {
        story: `
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è –≤—Å–µ—Ö –≥—Ä–∞–Ω–∏—Ü –±–ª–æ–∫–∞:

**–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã:**
1. **–õ–µ–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞**: –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –±–ª–æ–∫ —Ç–∞–∫, —á—Ç–æ–±—ã –µ–≥–æ –ª–µ–≤–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –ø—Ä–∏–±–ª–∏–∑–∏–ª–∞—Å—å –∫ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–∏
2. **–ü—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞**: –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –±–ª–æ–∫ —Ç–∞–∫, —á—Ç–æ–±—ã –µ–≥–æ –ø—Ä–∞–≤–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –ø—Ä–∏–±–ª–∏–∑–∏–ª–∞—Å—å –∫ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–∏  
3. **–í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞**: –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –±–ª–æ–∫ —Ç–∞–∫, —á—Ç–æ–±—ã –µ–≥–æ –≤–µ—Ä—Ö –ø—Ä–∏–±–ª–∏–∑–∏–ª—Å—è –∫ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–∏
4. **–ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞**: –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –±–ª–æ–∫ —Ç–∞–∫, —á—Ç–æ–±—ã –µ–≥–æ –Ω–∏–∑ –ø—Ä–∏–±–ª–∏–∑–∏–ª—Å—è –∫ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–∏
5. **–£–≥–ª—ã**: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã—Ä–æ–≤–Ω—è—Ç—å —É–≥–ª—ã –±–ª–æ–∫–æ–≤ - —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–≤–æ–π–Ω–æ–µ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ

**–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:**
- –ë–ª–æ–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–∏–ø–∞–µ—Ç
- snapThreshold = 20px –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
- –ó–µ–ª–µ–Ω—ã–µ –ª–∏–Ω–∏–∏ —á–µ—Ç–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –º–æ–º–µ–Ω—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è
        `,
      },
    },
  },
};

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º–∏ –ª–∏–Ω–∏—è–º–∏ –∏ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ–º –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é
 */
export const InfiniteLinesDemo: Story = {
  args: {
    magnetismDistance: 400, // –û—á–µ–Ω—å –±–æ–ª—å—à–æ–π —Ä–∞–¥–∏—É—Å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    snapThreshold: 10, // –ú–∞–ª–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è
    allowMultipleSnap: true,
    enabledBorders: ["top", "right", "bottom", "left"],
    snapColor: "#FF3B30",
    guideColor: "#C7C7CC",
    lineWidth: 1,
    snapDashPattern: [8, 4],
    guideDashPattern: [2, 2],
  },
  parameters: {
    docs: {
      description: {
        story: `
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –ª–∏–Ω–∏–π:
- magnetismDistance = 400px - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏–Ω–∏–∏ –æ—Ç –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
- snapThreshold = 10px - –æ—á–µ–Ω—å —Ç–æ—á–Ω–æ–µ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤–±–ª–∏–∑–∏ –ª–∏–Ω–∏–π
- –°–µ—Ä—ã–µ –ø—É–Ω–∫—Ç–∏—Ä–Ω—ã–µ –ª–∏–Ω–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
- –ö—Ä–∞—Å–Ω—ã–µ –ª–∏–Ω–∏–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ç–æ—á–Ω–æ–º –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –ª–∏–Ω–∏—é
- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–≤–∏–≥–∞—Ç—å –±–ª–æ–∫ –ø–æ –≤—Å–µ–º—É —ç–∫—Ä–∞–Ω—É - —É–≤–∏–¥–∏—Ç–µ –≤—Å–µ –ª–∏–Ω–∏–∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
        `,
      },
    },
  },
};

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏–µ –∫ —É–≥–ª—É
 */
export const MultipleSnapDemo: Story = {
  args: {
    magnetismDistance: 60,
    snapThreshold: 20,
    allowMultipleSnap: true,
    enabledBorders: ["top", "right", "bottom", "left"],
    snapColor: "#AF52DE",
    guideColor: "#F5E5FF",
    lineWidth: 1,
    snapDashPattern: [6, 3],
    guideDashPattern: [2, 2],
  },
  parameters: {
    docs: {
      description: {
        story: `
–ü—Ä–∏–º–µ—Ä –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è:
- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã—Ä–æ–≤–Ω—è—Ç—å –±–ª–æ–∫ –ø–æ —É–≥–ª—É –¥—Ä—É–≥–æ–≥–æ –±–ª–æ–∫–∞
- –£–≤–∏–¥–∏—Ç–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é –ª–∏–Ω–∏–∏ –ø—Ä–∏–ª–∏–ø–∞–Ω–∏—è
- –§–∏–æ–ª–µ—Ç–æ–≤—ã–µ –ª–∏–Ω–∏–∏ –Ω–∞ —Å–≤–µ—Ç–ª–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–º —Ñ–æ–Ω–µ
- –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Å–µ—Ç–∫–µ
        `,
      },
    },
  },
};
